{
	"name": "df_attendance_adls_staging_pg_stg",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_adls_landing_general",
						"type": "DatasetReference"
					},
					"name": "SourceDWS"
				},
				{
					"dataset": {
						"referenceName": "ds_adls_landing_general",
						"type": "DatasetReference"
					},
					"name": "SourceEWS"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_sql_fact_general",
						"type": "DatasetReference"
					},
					"name": "SinkDWS"
				},
				{
					"dataset": {
						"referenceName": "ds_sql_fact_general",
						"type": "DatasetReference"
					},
					"name": "SinkEWS"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "derivedColumn2"
				}
			],
			"scriptLines": [
				"parameters{",
				"     parameter1 as timestamp (currentTimestamp())",
				"}",
				"source(output(",
				"          EmpCode as string,",
				"          Name as string,",
				"          RecordDate as string,",
				"          DayType as string,",
				"          RecordType as string,",
				"          OU as string,",
				"          OUDesc as string,",
				"          PA as string,",
				"          PADesc as string,",
				"          PSA as string,",
				"          PSADesc as string,",
				"          CompanyCode as string,",
				"          CompanyDesc as string,",
				"          ProjectCode as string,",
				"          ProjectDesc as string,",
				"          VERTICAL_BU as string,",
				"          VERTICAL_DU as string,",
				"          COSTGRP as string,",
				"          CUSTOMER_GRP as string,",
				"          Supervisor as integer,",
				"          Role as string,",
				"          BAND as string,",
				"          DIS as string,",
				"          EmpPracticeCode as string,",
				"          EmpPracticeDesc as string,",
				"          EmpGroupPractice as string,",
				"          HORIZONTAL as string,",
				"          AccessCardWorkingHours as string,",
				"          Status as string,",
				"          IsExemption as string,",
				"          ExemptionReason as string,",
				"          Location as string,",
				"          BHREmpCode as string,",
				"          BHRNAME as string,",
				"          UploadedByCode as string,",
				"          UploadedByName as string,",
				"          UploadedOn as string,",
				"          AccessCardLocation as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SourceDWS",
				"source(output(",
				"          EmpCode as string,",
				"          NAME as string,",
				"          MonthYear as integer,",
				"          TotalDays as integer,",
				"          WorkingDays as integer,",
				"          OfficeDays as integer,",
				"          LeaveDays as integer,",
				"          ExceptionDays as integer,",
				"          TravelDays as integer,",
				"          OU as integer,",
				"          OUDesc as string,",
				"          PA as string,",
				"          PADesc as string,",
				"          PSA as string,",
				"          PSADesc as string,",
				"          CompanyCode as string,",
				"          CompanyDesc as string,",
				"          ProjectCode as string,",
				"          ProjectDesc as string,",
				"          VERTICAL_BU as string,",
				"          VERTICAL_DU as string,",
				"          COSTGRP as string,",
				"          CUSTOMER_GRP as string,",
				"          Supervisor as integer,",
				"          Role as string,",
				"          BAND as string,",
				"          DIS as string,",
				"          EmpPracticeCode as string,",
				"          EmpPracticeDesc as string,",
				"          EmpGroupPractice as string,",
				"          Horizontal as string,",
				"          AccessCardWorkingHours as string,",
				"          Location as string,",
				"          BHREmpCode as string,",
				"          BHRNAME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SourceEWS",
				"SourceDWS derive(source_name = 'IEDWS',",
				"          load_timestamp = $parameter1) ~> derivedColumn1",
				"SourceEWS derive(source_name = 'IEEWS',",
				"          load_timestamp = $parameter1) ~> derivedColumn2",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          empcode = EmpCode,",
				"          name = Name,",
				"          recorddate = RecordDate,",
				"          daytype = DayType,",
				"          recordtype = RecordType,",
				"          ou = OU,",
				"          oudesc = OUDesc,",
				"          pa = PA,",
				"          padesc = PADesc,",
				"          psa = PSA,",
				"          psadesc = PSADesc,",
				"          companycode = CompanyCode,",
				"          companydesc = CompanyDesc,",
				"          projectcode = ProjectCode,",
				"          projectdesc = ProjectDesc,",
				"          vertical_bu = VERTICAL_BU,",
				"          vertical_du = VERTICAL_DU,",
				"          costgrp = COSTGRP,",
				"          customer_grp = CUSTOMER_GRP,",
				"          supervisor = Supervisor,",
				"          role = Role,",
				"          band = BAND,",
				"          dis = DIS,",
				"          emppracticecode = EmpPracticeCode,",
				"          emppracticedesc = EmpPracticeDesc,",
				"          empgrouppractice = EmpGroupPractice,",
				"          horizontal = HORIZONTAL,",
				"          accesscardworkinghours = AccessCardWorkingHours,",
				"          status = Status,",
				"          isexemption = IsExemption,",
				"          exemptionreason = ExemptionReason,",
				"          source_name,",
				"          load_timestamp,",
				"          onsite_offshore = Location,",
				"          bhrempcode = BHREmpCode,",
				"          bhrname = BHRNAME,",
				"          uploadedbycode = UploadedByCode,",
				"          uploadedbyname = UploadedByName,",
				"          uploadedon = UploadedOn,",
				"          accesscardlocation = AccessCardLocation",
				"     )) ~> SinkDWS",
				"derivedColumn2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 2,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          empcode = EmpCode,",
				"          name = NAME,",
				"          monthyear = MonthYear,",
				"          totaldays = TotalDays,",
				"          workingdays = WorkingDays,",
				"          officedays = OfficeDays,",
				"          leavedays = LeaveDays,",
				"          exceptiondays = ExceptionDays,",
				"          traveldays = TravelDays,",
				"          ou = OU,",
				"          oudesc = OUDesc,",
				"          pa = PA,",
				"          padesc = PADesc,",
				"          psa = PSA,",
				"          psadesc = PSADesc,",
				"          companycode = CompanyCode,",
				"          companydesc = CompanyDesc,",
				"          projectcode = ProjectCode,",
				"          projectdesc = ProjectDesc,",
				"          vertical_bu = VERTICAL_BU,",
				"          vertical_du = VERTICAL_DU,",
				"          costgrp = COSTGRP,",
				"          customer_grp = CUSTOMER_GRP,",
				"          supervisor = Supervisor,",
				"          role = Role,",
				"          band = BAND,",
				"          dis = DIS,",
				"          emppracticecode = EmpPracticeCode,",
				"          emppracticedesc = EmpPracticeDesc,",
				"          empgrouppractice = EmpGroupPractice,",
				"          horizontal = Horizontal,",
				"          accesscardworkinghours = AccessCardWorkingHours,",
				"          source_name,",
				"          load_timestamp,",
				"          onsite_offshore = Location,",
				"          bhrempcode = BHREmpCode,",
				"          bhrname = BHRNAME",
				"     )) ~> SinkEWS"
			]
		}
	}
}